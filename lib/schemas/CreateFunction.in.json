{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "Code": {},
                "Description": "",
                "FunctionName": "MyFunction",
                "Handler": "souce_file.handler_name",
                "MemorySize": 128,
                "Publish": true,
                "Role": "arn:aws:iam::123456789012:role/service-role/role-name",
                "Runtime": "nodejs8.10",
                "Timeout": 15,
                "VpcConfig": {}
            },
            "properties": {
                "Code": {
                    "description": "The code for the function.",
                    "properties": {
                        "S3Bucket": {
                            "description": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.",
                            "maxLength": 63,
                            "minLength": 3,
                            "pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
                            "type": "string"
                        },
                        "S3Key": {
                            "description": "The Amazon S3 key of the deployment package.",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "S3ObjectVersion": {
                            "description": "For versioned objects, the version of the deployment package object to use.",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ZipFile": {
                            "description": "The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.",
                            "format": "password",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "DeadLetterConfig": {
                    "description": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/dlq.html\">Dead Letter Queues</a>.",
                    "properties": {
                        "TargetArn": {
                            "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.",
                            "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Description": {
                    "description": "A description of the function.",
                    "maxLength": 256,
                    "minLength": 0,
                    "type": "string"
                },
                "Environment": {
                    "description": "Environment variables that are accessible from function code during execution.",
                    "properties": {
                        "Variables": {
                            "description": "Environment variable key-value pairs.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "format": "password",
                                        "pattern": "[a-zA-Z]([a-zA-Z0-9_])+",
                                        "type": "string"
                                    },
                                    "value": {
                                        "format": "password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "FunctionName": {
                    "description": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
                    "maxLength": 140,
                    "minLength": 1,
                    "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
                    "type": "string"
                },
                "Handler": {
                    "description": "The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html\">Programming Model</a>.",
                    "maxLength": 128,
                    "pattern": "[^\\s]+",
                    "type": "string"
                },
                "KMSKeyArn": {
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
                    "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
                    "type": "string"
                },
                "Layers": {
                    "description": "A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.",
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+",
                        "type": "string"
                    },
                    "type": "array"
                },
                "MemorySize": {
                    "description": "The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.",
                    "maximum": 3008,
                    "minimum": 128,
                    "type": "integer"
                },
                "Publish": {
                    "description": "Set to true to publish the first version of the function during creation.",
                    "type": "boolean"
                },
                "Role": {
                    "description": "The Amazon Resource Name (ARN) of the function's execution role.",
                    "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
                    "type": "string"
                },
                "Runtime": {
                    "description": "The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>.",
                    "enum": [
                        "nodejs",
                        "nodejs4.3",
                        "nodejs6.10",
                        "nodejs8.10",
                        "java8",
                        "python2.7",
                        "python3.6",
                        "python3.7",
                        "dotnetcore1.0",
                        "dotnetcore2.0",
                        "dotnetcore2.1",
                        "nodejs4.3-edge",
                        "go1.x",
                        "ruby2.5",
                        "provided"
                    ],
                    "type": "string"
                },
                "Tags": {
                    "description": "A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to apply to the function.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "Timeout": {
                    "description": "The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.",
                    "minimum": 1,
                    "type": "integer"
                },
                "TracingConfig": {
                    "description": "Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS X-Ray.",
                    "properties": {
                        "Mode": {
                            "description": "The tracing mode.",
                            "enum": [
                                "Active",
                                "PassThrough"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "VpcConfig": {
                    "description": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/vpc.html\">VPC Settings</a>.",
                    "properties": {
                        "SecurityGroupIds": {
                            "description": "A list of VPC security groups IDs.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 5,
                            "type": "array"
                        },
                        "SubnetIds": {
                            "description": "A list of VPC subnet IDs.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 16,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "FunctionName",
                "Runtime",
                "Role",
                "Handler",
                "Code"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}