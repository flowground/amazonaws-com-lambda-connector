{
    "type": "object",
    "properties": {
        "FunctionName": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "MyFunction",
                "Principal": "s3.amazonaws.com",
                "SourceAccount": "123456789012",
                "SourceArn": "arn:aws:s3:::examplebucket/*",
                "StatementId": "ID-1"
            },
            "properties": {
                "Action": {
                    "description": "The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.",
                    "pattern": "(lambda:[*]|lambda:[a-zA-Z]+|[*])",
                    "type": "string"
                },
                "EventSourceToken": {
                    "description": "For Alexa Smart Home functions, a token that must be supplied by the invoker.",
                    "maxLength": 256,
                    "minLength": 0,
                    "pattern": "[a-zA-Z0-9._\\-]+",
                    "type": "string"
                },
                "Principal": {
                    "description": "The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.",
                    "pattern": ".*",
                    "type": "string"
                },
                "RevisionId": {
                    "description": "Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.",
                    "type": "string"
                },
                "SourceAccount": {
                    "description": "For AWS services, the ID of the account that owns the resource. Use this instead of <code>SourceArn</code> to grant permission to resources that are owned by another account (for example, all of an account's Amazon S3 buckets). Or use it together with <code>SourceArn</code> to ensure that the resource is owned by the specified account. For example, an Amazon S3 bucket could be deleted by its owner and recreated by another account.",
                    "pattern": "\\d{12}",
                    "type": "string"
                },
                "SourceArn": {
                    "description": "For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.",
                    "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
                    "type": "string"
                },
                "StatementId": {
                    "description": "A statement identifier that differentiates the statement from others in the same policy.",
                    "maxLength": 100,
                    "minLength": 1,
                    "pattern": "([a-zA-Z0-9-_]+)",
                    "type": "string"
                }
            },
            "required": [
                "StatementId",
                "Action",
                "Principal"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}